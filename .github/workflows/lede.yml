name: Build lede
# 当新建或者修改 issues 时，触发当前 workflow
on:
  issues:
    types: [opened, edited]
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Check Issue Label
      # run: echo ${{ !contains(github.event.issue.labels.*.name, 'build') }}
      if: ${{ !contains(github.event.issue.labels.*.name, 'build') }}
      run: |
          # 添加标签
          echo "Adding label 'build' to Issue"
          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
            -d '["build"]'
      #     # 反写 Issue
      #     echo "Updating Issue description"
      #     curl \
      #       -X PATCH \
      #       -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
      #       -d '{"body": "Issue does not have the 'build' label"}'
      #     exit 1
    - name: Show Machine Info
      run: |
       df -hT
       lscpu
       cat /proc/cpuinfo
       echo "--------------------------"
       cat /proc/meminfo
    # - name: Load custom configuration(Test)
    #   run: |
    #        ls
    #        echo "-------------分割线-------------"
    #        echo -e $CONFIG_FILE
    #        cat $GITHUB_WORKSPACE/$CONFIG_FILE

    # 临时注释


    # - name: Installation depends
    #   run: |
    #    sudo -E apt update
    #    sudo -E apt -y full-upgrade
    #    sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    #    sudo -E apt -y autoremove --purge
    #    sudo -E apt clean
    #    sudo -E timedatectl set-timezone "Asia/Shanghai"
    # - name: Clone source code
    #   run: |
    #     git clone $REPO_URL
    #     cd lede
    #     ./scripts/feeds update -a
    #     ./scripts/feeds install -a
    # - name: Load custom configuration
    #   run: |
    #       ls
    #       echo "-------------分割线-------------"
    #       echo -e $CONFIG_FILE
    #       echo "-------------分割线-------------"
    #       echo "自定义配置文件"
    #       cat $GITHUB_WORKSPACE/$CONFIG_FILE
    #       echo -e "\n"
    #       echo "-------------分割线-------------"
    #       [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
    # - name: Download package
    #   run: |
    #     cd lede 
    #     make defconfig
    #     make download -j8
    #     find dl -size -1024c -exec ls -l {} \;
    #     find dl -size -1024c -exec rm -f {} \;
    # - name: Build
    #   run: |
    #     cd lede
    #     echo -e $(nproc)
    #     make -j$(nproc) V=s
    # - name: Archive
    #   run:  |
    #     cd lede
    #     tar -zcvf lede.tar.gz ./*
    # - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: lede
        path: lede/lede.tar.gz
